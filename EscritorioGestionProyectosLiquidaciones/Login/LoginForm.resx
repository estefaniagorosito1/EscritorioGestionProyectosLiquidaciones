<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QCGRXhpZgAATU0AKgAAAAgAAwESAAMAAAABAAEAAAE7AAIAAAAZ
        AAAAMpydAAEAAAAyAAAATAAAAABWZWN0b3JTdG9jay5jb20vMTg4MzM1NTMAAFYAZQBjAHQAbwByAFMA
        dABvAGMAawAuAGMAbwBtAC8AMQA4ADgAMwAzADUANQAzAAAA/9sAQwACAQECAQECAgICAgICAgMFAwMD
        AwMGBAQDBQcGBwcHBgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMGAwMG
        DAgHCAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgA
        kQCfAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMF
        BQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2
        Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeo
        qaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEB
        AQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
        IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2Rl
        ZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT
        1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/fyiiigAooooAKKK8P8A+Chn7evg
        v/gnB+zFrPxK8aSPNFasLLSdLhcLc69qMisYLOHIOGfYxZiCERJHPyoaANL9tD9ur4X/APBP/wCEc3jP
        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
</value>
  </data>
</root>