<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>